from absl.testing import parameterized
from distrax._src.bijectors.tanh import Tanh as Tanh
from distrax._src.bijectors.triangular_linear import (
    TriangularLinear as TriangularLinear,
)

class TriangularLinearTest(parameterized.TestCase):
    def test_static_properties(self) -> None: ...
    def test_properties(self, batch_shape, dtype, is_lower) -> None: ...
    def test_raises_with_invalid_parameters(self, bij_params) -> None: ...
    def test_batched_parameters(
        self, matrix_batch_shape, input_batch_shape
    ) -> None: ...
    def test_identity_initialization(self, batch_shape, is_lower) -> None: ...
    def test_inverse_methods(self, batch_shape, param_shape, is_lower) -> None: ...
    def test_forward_jacobian_det(self, is_lower) -> None: ...
    def test_inverse_jacobian_det(self, is_lower) -> None: ...
    def test_raises_on_invalid_input_shape(self) -> None: ...
    def test_jittable(self): ...
    def test_same_as_itself(self) -> None: ...
    def test_not_same_as_others(self) -> None: ...
