from absl.testing import parameterized
from distrax._src.bijectors import block as block, masked_coupling as masked_coupling

class MaskedCouplingTest(parameterized.TestCase):
    def test_properties(self) -> None: ...
    def test_raises_on_invalid_mask_dtype(self, dtype): ...
    def test_shapes_are_correct(self, event_ndims, batch_shape) -> None: ...
    def test_non_default_inner_event_ndims(self): ...
    def test_masking_works(self) -> None: ...
    def test_inverse_methods_are_correct(self, event_ndims) -> None: ...
    def test_composite_methods_are_consistent(self, event_ndims) -> None: ...
    def test_raises_if_inner_bijector_is_not_scalar(self): ...
    def test_raises_if_inner_bijector_has_wrong_inner_ndims(self): ...
    def test_raises_on_invalid_input_shape(self) -> None: ...
    def test_batched_mask(self, mask_batch_shape, input_batch_shape): ...
    def test_jittable(self): ...
