from _typeshed import Incomplete
from distrax._src.bijectors import bijector as base

tfb: Incomplete
Array: Incomplete

class BijectorFromTFP(base.Bijector):
    def __init__(self, tfp_bijector: tfb.Bijector) -> None: ...
    def __getattr__(self, name: str): ...
    def forward(self, x: Array) -> Array: ...
    def inverse(self, y: Array) -> Array: ...
    def forward_log_det_jacobian(self, x: Array) -> Array: ...
    def inverse_log_det_jacobian(self, y: Array) -> Array: ...
    def forward_and_log_det(self, x: Array) -> tuple[Array, Array]: ...
    def inverse_and_log_det(self, y: Array) -> tuple[Array, Array]: ...
    @property
    def name(self) -> str: ...
