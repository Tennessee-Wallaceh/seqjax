from _typeshed import Incomplete
from absl.testing import parameterized
from distrax._src.bijectors import lambda_bijector as lambda_bijector
from distrax._src.distributions import normal as normal, transformed as transformed
from distrax._src.utils import conversion as conversion

tfd: Incomplete
tfb: Incomplete
RTOL: float

class LambdaTest(parameterized.TestCase):
    seed: Incomplete
    def setUp(self) -> None: ...
    def test_event_shape(self, mu, sigma, base_dist) -> None: ...
    def test_raises_on_both_none(self) -> None: ...
    def test_raises_on_log_det_without_event_ndims(self): ...
    def test_raises_on_event_ndims_without_log_det(self, ndims_in, ndims_out): ...
    def test_sample_shape(self, mu, sigma, sample_shape, base_dist): ...
    def test_log_prob(self, mu, sigma, value, base_dist) -> None: ...
    def test_prob(self, mu, sigma, value, base_dist) -> None: ...
    def test_sample_and_log_prob(self, mu, sigma, sample_shape, base_dist): ...
    def test_method(self, function_string, mu, sigma, base_dist): ...
    def test_log_dets(self, lambda_bjct, tfp_bijector_fn) -> None: ...
    def test_against_tfp_bijectors(
        self, lambda_bjct, tfp_bijector, base_dist
    ) -> None: ...
    def test_auto_lambda(self, forward_fn, tfp_bijector, base_dist) -> None: ...
    def test_raises_on_invalid_input_shape(self): ...
    def test_jittable(self): ...
