from absl.testing import parameterized
from distrax._src.bijectors import (
    rational_quadratic_spline as rational_quadratic_spline,
)

class RationalQuadraticSplineTest(parameterized.TestCase):
    def test_properties(self) -> None: ...
    def test_invalid_properties(self, bij_params) -> None: ...
    def test_shapes_are_correct(self) -> None: ...
    def test_broadcasting_is_correct(self) -> None: ...
    def test_is_identity_for_zero_params(self) -> None: ...
    def test_inverse_methods_are_correct(self) -> None: ...
    def test_is_monotonically_increasing(self) -> None: ...
    def test_composite_methods_are_consistent(self) -> None: ...
    def test_boundary_conditions(self) -> None: ...
    def test_batched_parameters(
        self, params_batch_shape, input_batch_shape
    ) -> None: ...
    def test_safe_quadratic_root(self, a, b, c, x) -> None: ...
    def test_jittable(self): ...
