from absl.testing import parameterized
from distrax._src.bijectors import (
    bijector as base_bijector,
    block as block,
    split_coupling as split_coupling,
)

class DummyBijector(base_bijector.Bijector):
    def forward_and_log_det(self, x): ...

class SplitCouplingTest(parameterized.TestCase):
    def test_properties(self) -> None: ...
    def test_invalid_properties(self, bij_params): ...
    def test_raises_on_bijector_with_different_event_ndims(self): ...
    def test_raises_on_bijector_with_extra_event_ndims(self): ...
    def test_shapes_are_correct(self, split_index, split_axis, swap) -> None: ...
    def test_swapping_works(self) -> None: ...
    def test_inverse_methods_are_correct(
        self, split_index, split_axis, swap
    ) -> None: ...
    def test_composite_methods_are_consistent(
        self, split_index, split_axis, swap
    ) -> None: ...
    def test_raises_on_invalid_input_shape(self): ...
    def test_raises_on_invalid_inner_bijector(self): ...
    def test_jittable(self): ...
