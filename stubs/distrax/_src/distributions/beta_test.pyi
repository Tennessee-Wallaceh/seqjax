from distrax._src.utils import equivalence as equivalence

class BetaTest(equivalence.EquivalenceTest):
    def setUp(self) -> None: ...
    def test_properties(self, shape_of_alpha, shape_of_beta, batch_shape) -> None: ...
    def test_sample_shape(self, distr_params, sample_shape) -> None: ...
    def test_sample_dtype(self, method, dtype) -> None: ...
    def test_sample_values(self, method): ...
    def test_sample_and_log_prob(self, distr_params, sample_shape) -> None: ...
    def test_methods_with_value(self, distr_params, value) -> None: ...
    def test_method(self, distr_params) -> None: ...
    def test_mode(self, alpha, beta, expected_result) -> None: ...
    def test_with_two_distributions(self, mode_string) -> None: ...
    def test_jitable(self) -> None: ...
    def test_slice(self, slice_) -> None: ...
    def test_slice_different_parameterization(self) -> None: ...
