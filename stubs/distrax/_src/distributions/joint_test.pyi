from absl.testing import parameterized
from distrax._src.distributions.categorical import Categorical as Categorical
from distrax._src.distributions.joint import Joint as Joint
from distrax._src.distributions.mvn_diag import (
    MultivariateNormalDiag as MultivariateNormalDiag,
)
from distrax._src.distributions.normal import Normal as Normal

class JointTest(parameterized.TestCase):
    def test_single_distribution(self, fn, params, x) -> None: ...
    def test_distribution_tuple(self) -> None: ...
    def test_distribution_list(self) -> None: ...
    def test_distributions_with_batch_shape(self) -> None: ...
    def test_nested_distributions(self) -> None: ...
    def test_entropy(self) -> None: ...
    def test_mode(self): ...
    def test_mean(self): ...
    def test_median(self): ...
    def test_kl_divergence(self) -> None: ...
    def test_log_cdf(self) -> None: ...
    def test_distributions_property(self) -> None: ...
    def test_event_shape_property(self) -> None: ...
    def test_dtype_property(self) -> None: ...
    def test_indexing(self, batch_shape, index): ...
    def test_raise_on_mismatched_batch_shape(self) -> None: ...
    def test_raise_on_incompatible_distributions_kl(self) -> None: ...
