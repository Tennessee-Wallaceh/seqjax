from _typeshed import Incomplete
from distrax._src.distributions import softmax as softmax
from distrax._src.utils import equivalence as equivalence, math as math

class SoftmaxUnitTemperatureTest(equivalence.EquivalenceTest):
    temperature: float
    probs: Incomplete
    logits: Incomplete
    def setUp(self) -> None: ...
    def test_num_categories(self) -> None: ...
    def test_parameters(self) -> None: ...

class SoftmaxTest(equivalence.EquivalenceTest):
    temperature: float
    logits: Incomplete
    probs: Incomplete
    def setUp(self) -> None: ...
    def test_num_categories(self) -> None: ...
    def test_parameters(self) -> None: ...
    def test_sample_dtype(self, dtype) -> None: ...
    def test_jittable(self) -> None: ...
    def test_slice(self, slice_) -> None: ...
    def test_slice_ellipsis(self) -> None: ...
