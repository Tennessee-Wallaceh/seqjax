from distrax._src.distributions import laplace as laplace
from distrax._src.utils import equivalence as equivalence

class LaplaceTest(equivalence.EquivalenceTest):
    def setUp(self) -> None: ...
    def test_event_shape(self, distr_params) -> None: ...
    def test_sample_shape(self, distr_params, sample_shape) -> None: ...
    def test_sample_dtype(self, dtype) -> None: ...
    def test_sample_and_log_prob(self, distr_params, sample_shape) -> None: ...
    def test_log_prob(self, distr_params, value) -> None: ...
    def test_prob(self, distr_params, value) -> None: ...
    def test_cdf(self, distr_params, value) -> None: ...
    def test_log_cdf(self, distr_params, value) -> None: ...
    def test_log_survival_function(self, distr_params, value) -> None: ...
    def test_method(self, distr_params, function_string) -> None: ...
    def test_median(self, distr_params) -> None: ...
    def test_with_two_distributions(self, function_string, mode_string) -> None: ...
    def test_jitable(self) -> None: ...
    def test_slice(self, slice_) -> None: ...
    def test_slice_different_parameterization(self) -> None: ...
