from _typeshed import Incomplete
from distrax._src.distributions import distribution as distribution
from distrax._src.utils import conversion as conversion

tfd: Incomplete
Array: Incomplete
Numeric: Incomplete
PRNGKey: Incomplete
EventT: Incomplete

class Gumbel(distribution.Distribution):
    equiv_tfp_cls: Incomplete
    def __init__(self, loc: Numeric, scale: Numeric) -> None: ...
    @property
    def event_shape(self) -> tuple[int, ...]: ...
    @property
    def batch_shape(self) -> tuple[int, ...]: ...
    @property
    def loc(self) -> Array: ...
    @property
    def scale(self) -> Array: ...
    def log_prob(self, value: EventT) -> Array: ...
    def entropy(self) -> Array: ...
    def log_cdf(self, value: EventT) -> Array: ...
    def mean(self) -> Array: ...
    def stddev(self) -> Array: ...
    def variance(self) -> Array: ...
    def mode(self) -> Array: ...
    def median(self) -> Array: ...
    def __getitem__(self, index) -> Gumbel: ...
