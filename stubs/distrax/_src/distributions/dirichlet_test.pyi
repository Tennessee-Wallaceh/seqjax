from _typeshed import Incomplete
from distrax._src.distributions import beta as beta, dirichlet as dirichlet
from distrax._src.utils import equivalence as equivalence

tfd: Incomplete

class DirichletTest(equivalence.EquivalenceTest):
    def setUp(self) -> None: ...
    def test_properties(self, concentration_shape, batch_shape) -> None: ...
    def test_raises_on_wrong_concentration(self, concentration_shape) -> None: ...
    def test_sample_shape(self, concentration_shape, sample_shape) -> None: ...
    def test_sample_dtype(self, dtype) -> None: ...
    def test_sample_and_log_prob(self, concentration_shape, sample_shape) -> None: ...
    def test_methods_with_value(self, concentration_shape, value_shape) -> None: ...
    def test_method(self, concentration_shape) -> None: ...
    def test_mode(self, concentration, expected_result) -> None: ...
    def test_with_two_distributions(self, mode_string) -> None: ...
    def test_with_two_distributions_dirichlet_beta(self, mode_string) -> None: ...
    def test_kl_raises_on_wrong_dims(self, dist2_type) -> None: ...
    def test_jitable(self) -> None: ...
    def test_slice(self, slice_) -> None: ...
    def test_slice_ellipsis(self) -> None: ...
